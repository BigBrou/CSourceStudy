Chapter4

Information Hiding (정보 은닉)
제한된 방법으로 접근만을 허용해서 잘못된 값이 저장이 되지 않도록 해야함 , 정보 은닉의 필요성
private로 변수를 선언하고 접근하는 함수를 별도로 정의해서, 안전한 형태로 멤버변수의 접근을 유도하는 것이 바로 정보은닉

const 함수
    - const 함수는 멤버변수의 해당 함수의 수행 시, 멤버 변수의 수정을 하지 않도록 하겠다는 의미
    - const 함수 내에서 다른 함수를 호출 시에는 다른 함수도 const 함수여야만 호출이 가능하다.
    - 만약 매개변수로 const 참조자 변수의 클래스를 할당 시, 이 때에도 사용하는 함수가 const 가 아니면 compile 에러가 발생
      함수가 변경할 수 있는 능력을 갖추고 있으면 const 참조자 매개변수는 이를 사용할 수 없음


Encapsulation (캡슐화)
관련이 있는 함수와 변수를 하나의 클래스 안에 묶는 것이 캡슐화
(즉, 여려 개의 클래스가 관련이 있을 경우, 또 하나의 클래스로 묶어서 나타내는 것과 같음)

캡술화의 범위를 결정하는 것은 어려운 작업


Constructor
    - 클래스와 함수 이름이 동일함
    - 선언되어 있지 않으며, 실제로 반환하지 않음
    - overloading이 가능하고, default 값을 설정할 수 있음

Member Initializer
    - 생성자(현재까지는) 에서 멤버변수를 초기화를 할 때 활용할 수 있는 유용성을 보임
    - 멤버변수가 객체가 아니어도 초기화를 하는데 활용할 수 있음
    - 초기화의 대상을 명확하게 할 수 있음
    - 성능의 이점
    - 생성자 실행 시, 초기화를 바로 진행할 수 있기 때문에 const 멤버변수의 초기화도 가능하게 한다.
      즉, 선언과 동시에 초기화가 이루어진다고 볼 수 있음
    - 추가로, 참조자도 선언과 동시에 초기화가 이루어지기 때문에 참조자를 멤버변수로 쓸 수 있



private 생성자
    - 클래스 내부에서만 객체를 생성할 때, private 생성자를 쓸 수 있음

destructor 소멸자
    - 생성자와 다르게 overloading 불가하고, default 설정할 수 없음
    -